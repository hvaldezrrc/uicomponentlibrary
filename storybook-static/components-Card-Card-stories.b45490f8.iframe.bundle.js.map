{"version":3,"file":"components-Card-Card-stories.b45490f8.iframe.bundle.js","mappings":";;;AAOA;;;;AAIA;AAUA;AAUA;AAYA;AASA;;;;;;;;;AAgBA;AAUA;;AAaA;ACtFA;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;AAeA;;;;AC9EA;AAKA;AACA;AAUA;;AAWA;;;;AAIA;;AAaA","sources":["webpack://valdez_hanz_ui_garden/./src/components/Button/Button.tsx","webpack://valdez_hanz_ui_garden/./src/components/Card/Card.tsx","webpack://valdez_hanz_ui_garden/./src/components/Text/Text.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { ButtonProps } from './Button.types';\n\nconst StyledButton = styled.button<ButtonProps>`\n  border: none;\n  border-radius: 4px;\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  line-height: 1;\n  padding: ${(props) => {\n    switch (props.size) {\n      case 'small':\n        return '8px 16px';\n      case 'large':\n        return '16px 32px';\n      default:\n        return '12px 24px';\n    }\n  }};\n  font-size: ${(props) => {\n    switch (props.size) {\n      case 'small':\n        return '12px';\n      case 'large':\n        return '16px';\n      default:\n        return '14px';\n    }\n  }};\n  background-color: ${(props) => {\n    if (props.disabled) return '#cccccc';\n    if (props.backgroundColor) return props.backgroundColor;\n    switch (props.variant) {\n      case 'secondary':\n        return '#ffffff';\n      case 'danger':\n        return '#dc3545';\n      default:\n        return '#007bff';\n    }\n  }};\n  color: ${(props) => {\n    if (props.disabled) return '#666666';\n    switch (props.variant) {\n      case 'secondary':\n        return '#007bff';\n      default:\n        return '#ffffff';\n    }\n  }};\n  border: ${(props) => {\n    switch (props.variant) {\n      case 'secondary':\n        return '1px solid #007bff';\n      default:\n        return 'none';\n    }\n  }};\n  transition: all 0.2s ease-in-out;\n\n  &:hover:not(:disabled) {\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  @media (max-width: 768px) {\n    padding: ${(props) => {\n      switch (props.size) {\n        case 'small':\n          return '6px 12px';\n        case 'large':\n          return '12px 24px';\n        default:\n          return '10px 20px';\n      }\n    }};\n    font-size: ${(props) => {\n      switch (props.size) {\n        case 'small':\n          return '11px';\n        case 'large':\n          return '15px';\n        default:\n          return '13px';\n      }\n    }};\n  }\n`;\n\nexport const Button: React.FC<ButtonProps> = ({\n  label,\n  size = 'medium',\n  variant = 'primary',\n  disabled = false,\n  backgroundColor,\n  className,\n  onClick,\n  ...props\n}) => {\n  return (\n    <StyledButton\n      type=\"button\"\n      size={size}\n      variant={variant}\n      disabled={disabled}\n      backgroundColor={backgroundColor}\n      className={className}\n      onClick={onClick}\n      label={label}\n      {...props}\n    >\n      {label}\n    </StyledButton>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { CardProps } from './Card.types';\n\nconst StyledCard = styled.div<CardProps>`\n  background-color: ${(props) => props.backgroundColor || '#ffffff'};\n  border: 1px solid #dee2e6;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  padding: 24px;\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  width: ${(props) => props.width || 'auto'};\n  height: ${(props) => props.height || 'auto'};\n  opacity: ${(props) => (props.disabled ? 0.6 : 1)};\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'default')};\n  transition: all 0.2s ease-in-out;\n  display: flex;\n  flex-direction: column;\n\n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n\n  @media (max-width: 768px) {\n    padding: 20px;\n\n    &:hover:not(:disabled) {\n      transform: translateY(-1px);\n      box-shadow: 0 3px 8px rgba(0, 0, 0, 0.12);\n    }\n  }\n\n  @media (max-width: 480px) {\n    padding: 16px;\n  }\n`;\n\nconst CardTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin: 0 0 12px 0;\n  color: #212529;\n  line-height: 1.3;\n\n  @media (max-width: 768px) {\n    font-size: 1.1rem;\n    margin-bottom: 10px;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 1rem;\n    margin-bottom: 8px;\n  }\n`;\n\nconst CardContent = styled.div`\n  color: #495057;\n  font-size: 14px;\n  line-height: 1.5;\n  flex-grow: 1;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 12px;\n  }\n`;\n\nconst CardContentText = styled.p`\n  margin: 0;\n  color: #495057;\n  font-size: 14px;\n  line-height: 1.5;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 12px;\n  }\n`;\n\nexport const Card: React.FC<CardProps> = ({\n  title,\n  content,\n  children,\n  width,\n  height,\n  disabled = false,\n  backgroundColor,\n  className,\n  ...props\n}) => {\n  return (\n    <StyledCard\n      width={width}\n      height={height}\n      disabled={disabled}\n      backgroundColor={backgroundColor}\n      className={className}\n      title={title}\n      content={content}\n      {...props}\n    >\n      {title && <CardTitle>{title}</CardTitle>}\n      {children ? (\n        <CardContent>{children}</CardContent>\n      ) : content ? (\n        <CardContentText>{content}</CardContentText>\n      ) : null}\n    </StyledCard>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { TextProps } from './Text.types';\n\nconst StyledText = styled.p<TextProps>`\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  margin: 0;\n  padding: 0;\n  color: ${(props) => {\n    if (props.disabled) return '#999999';\n    if (props.color) return props.color;\n    return '#333333';\n  }};\n  background-color: ${(props) => props.backgroundColor || 'transparent'};\n  font-size: ${(props) => {\n    switch (props.size) {\n      case 'small':\n        return '12px';\n      case 'large':\n        return '18px';\n      default:\n        return '14px';\n    }\n  }};\n  font-weight: ${(props) => {\n    switch (props.weight) {\n      case 'light':\n        return '300';\n      case 'bold':\n        return '700';\n      default:\n        return '400';\n    }\n  }};\n  line-height: 1.5;\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'default')};\n  transition: color 0.2s ease-in-out;\n\n  @media (max-width: 768px) {\n    font-size: ${(props) => {\n      switch (props.size) {\n        case 'small':\n          return '11px';\n        case 'large':\n          return '16px';\n        default:\n          return '13px';\n      }\n    }};\n  }\n`;\n\nexport const Text: React.FC<TextProps> = ({\n  content,\n  size = 'medium',\n  weight = 'normal',\n  color,\n  disabled = false,\n  backgroundColor,\n  className,\n  ...props\n}) => {\n  return (\n    <StyledText\n      size={size}\n      weight={weight}\n      color={color}\n      disabled={disabled}\n      backgroundColor={backgroundColor}\n      className={className}\n      content={content}\n      {...props}\n    >\n      {content}\n    </StyledText>\n  );\n};\n"],"names":[],"sourceRoot":""}