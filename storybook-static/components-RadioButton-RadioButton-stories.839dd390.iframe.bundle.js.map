{"version":3,"file":"components-RadioButton-RadioButton-stories.839dd390.iframe.bundle.js","mappings":";;;AAOA;AACA;AACA;;;;;;;AAOA;;;;;;AAQA;;;;;;AAQA;;;;AAIA;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;;;;;;;AASA","sources":["webpack://valdez_hanz_ui_garden/./src/components/RadioButton/RadioButton.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { RadioButtonProps } from './RadioButton.types';\n\nconst RadioContainer = styled.label<RadioButtonProps>`\n  display: flex;\n  align-items: center;\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\n  opacity: ${(props) => (props.disabled ? 0.6 : 1)};\n  background-color: ${(props) => props.backgroundColor || 'transparent'};\n  padding: 8px;\n  border-radius: 4px;\n  transition: all 0.2s ease-in-out;\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\n  &:hover:not(:disabled) {\n    background-color: ${(props) => props.backgroundColor || '#f8f9fa'};\n  }\n\n  @media (max-width: 768px) {\n    padding: 6px;\n  }\n`;\n\nconst HiddenRadio = styled.input.attrs({ type: 'radio' })`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  width: 0;\n  height: 0;\n`;\n\nconst CustomRadio = styled.div<{ checked: boolean; disabled: boolean }>`\n  width: 20px;\n  height: 20px;\n  border: 2px solid\n    ${(props) => {\n      if (props.disabled) return '#ced4da';\n      if (props.checked) return '#007bff';\n      return '#ced4da';\n    }};\n  border-radius: 50%;\n  margin-right: 12px;\n  position: relative;\n  flex-shrink: 0;\n  background-color: #ffffff;\n  transition: all 0.2s ease-in-out;\n\n  &::after {\n    content: '';\n    width: 10px;\n    height: 10px;\n    background-color: ${(props) => {\n      if (props.disabled && props.checked) return '#6c757d';\n      if (props.checked) return '#007bff';\n      return 'transparent';\n    }};\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transition: all 0.2s ease-in-out;\n  }\n\n  @media (max-width: 768px) {\n    width: 18px;\n    height: 18px;\n    margin-right: 10px;\n\n    &::after {\n      width: 8px;\n      height: 8px;\n    }\n  }\n`;\n\nconst RadioLabel = styled.span<{ disabled: boolean }>`\n  font-size: 14px;\n  color: ${(props) => (props.disabled ? '#6c757d' : '#495057')};\n  line-height: 1.4;\n  user-select: none;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nexport const RadioButton: React.FC<RadioButtonProps> = ({\n  name,\n  value,\n  label,\n  checked = false,\n  disabled = false,\n  backgroundColor,\n  className,\n  onChange,\n  ...props\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange && event.target.checked) {\n      onChange(value);\n    }\n  };\n\n  return (\n    <RadioContainer\n      disabled={disabled}\n      backgroundColor={backgroundColor}\n      className={className}\n      name={name}\n      value={value}\n      label={label}\n      checked={checked}\n      {...props}\n    >\n      <HiddenRadio\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <CustomRadio checked={checked} disabled={disabled} />\n      <RadioLabel disabled={disabled}>{label}</RadioLabel>\n    </RadioContainer>\n  );\n};\n"],"names":[],"sourceRoot":""}