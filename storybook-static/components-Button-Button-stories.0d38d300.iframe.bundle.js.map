{"version":3,"file":"components-Button-Button-stories.0d38d300.iframe.bundle.js","mappings":";;;AAOA;;;;AAIA;AAUA;AAUA;AAYA;AASA;;;;;;;;;AAgBA;AAUA;;AAaA","sources":["webpack://valdez_hanz_ui_garden/./src/components/Button/Button.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { ButtonProps } from './Button.types';\n\nconst StyledButton = styled.button<ButtonProps>`\n  border: none;\n  border-radius: 4px;\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  line-height: 1;\n  padding: ${(props) => {\n    switch (props.size) {\n      case 'small':\n        return '8px 16px';\n      case 'large':\n        return '16px 32px';\n      default:\n        return '12px 24px';\n    }\n  }};\n  font-size: ${(props) => {\n    switch (props.size) {\n      case 'small':\n        return '12px';\n      case 'large':\n        return '16px';\n      default:\n        return '14px';\n    }\n  }};\n  background-color: ${(props) => {\n    if (props.disabled) return '#cccccc';\n    if (props.backgroundColor) return props.backgroundColor;\n    switch (props.variant) {\n      case 'secondary':\n        return '#ffffff';\n      case 'danger':\n        return '#dc3545';\n      default:\n        return '#007bff';\n    }\n  }};\n  color: ${(props) => {\n    if (props.disabled) return '#666666';\n    switch (props.variant) {\n      case 'secondary':\n        return '#007bff';\n      default:\n        return '#ffffff';\n    }\n  }};\n  border: ${(props) => {\n    switch (props.variant) {\n      case 'secondary':\n        return '1px solid #007bff';\n      default:\n        return 'none';\n    }\n  }};\n  transition: all 0.2s ease-in-out;\n\n  &:hover:not(:disabled) {\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n\n  @media (max-width: 768px) {\n    padding: ${(props) => {\n      switch (props.size) {\n        case 'small':\n          return '6px 12px';\n        case 'large':\n          return '12px 24px';\n        default:\n          return '10px 20px';\n      }\n    }};\n    font-size: ${(props) => {\n      switch (props.size) {\n        case 'small':\n          return '11px';\n        case 'large':\n          return '15px';\n        default:\n          return '13px';\n      }\n    }};\n  }\n`;\n\nexport const Button: React.FC<ButtonProps> = ({\n  label,\n  size = 'medium',\n  variant = 'primary',\n  disabled = false,\n  backgroundColor,\n  className,\n  onClick,\n  ...props\n}) => {\n  return (\n    <StyledButton\n      type=\"button\"\n      size={size}\n      variant={variant}\n      disabled={disabled}\n      backgroundColor={backgroundColor}\n      className={className}\n      onClick={onClick}\n      label={label}\n      {...props}\n    >\n      {label}\n    </StyledButton>\n  );\n};\n"],"names":[],"sourceRoot":""}